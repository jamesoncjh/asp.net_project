// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Catering.Data;

#nullable disable

namespace ThAmCo.Catering.Migrations
{
    [DbContext(typeof(CateringDbContext))]
    [Migration("20220613140547_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("thamco.catering")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodBooking", b =>
                {
                    b.Property<string>("FoodBookingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FoodBookingId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodBooking", "thamco.catering");

                    b.HasData(
                        new
                        {
                            FoodBookingId = "1",
                            Date = "06-06-2022",
                            MenuId = "1"
                        },
                        new
                        {
                            FoodBookingId = "2",
                            Date = "07-06-2022",
                            MenuId = "2"
                        },
                        new
                        {
                            FoodBookingId = "3",
                            Date = "08-06-2022",
                            MenuId = "3"
                        },
                        new
                        {
                            FoodBookingId = "4",
                            Date = "09-06-2022",
                            MenuId = "4"
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodList", b =>
                {
                    b.Property<int>("FoodListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodListId"), 1L, 1);

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("FoodListId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodList", "thamco.catering");

                    b.HasData(
                        new
                        {
                            FoodListId = 1,
                            FoodName = "Soupe à l’oignon",
                            MenuId = "1",
                            Price = 10.0
                        },
                        new
                        {
                            FoodListId = 2,
                            FoodName = "Coq au vin",
                            MenuId = "1",
                            Price = 20.0
                        },
                        new
                        {
                            FoodListId = 3,
                            FoodName = "Cassoulet",
                            MenuId = "1",
                            Price = 30.0
                        },
                        new
                        {
                            FoodListId = 4,
                            FoodName = "Bœuf bourguignon",
                            MenuId = "1",
                            Price = 40.0
                        },
                        new
                        {
                            FoodListId = 5,
                            FoodName = "Chocolate soufflé",
                            MenuId = "1",
                            Price = 50.0
                        },
                        new
                        {
                            FoodListId = 6,
                            FoodName = "Steam Mihun with Ginger Wine Chicken",
                            MenuId = "2",
                            Price = 60.0
                        },
                        new
                        {
                            FoodListId = 7,
                            FoodName = "Guang Xi Style Braised Pork with Man Tou ",
                            MenuId = "2",
                            Price = 70.0
                        },
                        new
                        {
                            FoodListId = 8,
                            FoodName = "Guang Xi Style Stuffed Taufu Ball ",
                            MenuId = "2",
                            Price = 80.0
                        },
                        new
                        {
                            FoodListId = 9,
                            FoodName = "Claypot Kampung Chicken with Sesame Oil & Ginger ",
                            MenuId = "2",
                            Price = 90.0
                        },
                        new
                        {
                            FoodListId = 10,
                            FoodName = "Sweet and sour pork",
                            MenuId = "2",
                            Price = 100.0
                        },
                        new
                        {
                            FoodListId = 11,
                            FoodName = "Lasagna Bolognese",
                            MenuId = "3",
                            Price = 10.0
                        },
                        new
                        {
                            FoodListId = 12,
                            FoodName = "Veal Milanese",
                            MenuId = "3",
                            Price = 20.0
                        },
                        new
                        {
                            FoodListId = 13,
                            FoodName = "Gnocchi Sorrento",
                            MenuId = "3",
                            Price = 30.0
                        },
                        new
                        {
                            FoodListId = 14,
                            FoodName = "Spaghetti Carbonara",
                            MenuId = "3",
                            Price = 40.0
                        },
                        new
                        {
                            FoodListId = 15,
                            FoodName = "Antipasto Italiano",
                            MenuId = "3",
                            Price = 50.0
                        },
                        new
                        {
                            FoodListId = 16,
                            FoodName = "Ayam Percik",
                            MenuId = "4",
                            Price = 60.0
                        },
                        new
                        {
                            FoodListId = 17,
                            FoodName = "Nasi Kerabu",
                            MenuId = "4",
                            Price = 70.0
                        },
                        new
                        {
                            FoodListId = 18,
                            FoodName = "Nasi Lemak",
                            MenuId = "4",
                            Price = 80.0
                        },
                        new
                        {
                            FoodListId = 19,
                            FoodName = "Beef Rendang",
                            MenuId = "4",
                            Price = 90.0
                        },
                        new
                        {
                            FoodListId = 20,
                            FoodName = "Laksa",
                            MenuId = "4",
                            Price = 100.0
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.Menu", b =>
                {
                    b.Property<string>("MenuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FoodBookingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("Menu", "thamco.catering");

                    b.HasData(
                        new
                        {
                            MenuId = "1",
                            MenuName = "French Menu"
                        },
                        new
                        {
                            MenuId = "2",
                            MenuName = "Canton Menu"
                        },
                        new
                        {
                            MenuId = "3",
                            MenuName = "Italian Menu"
                        },
                        new
                        {
                            MenuId = "4",
                            MenuName = "Malay Menu"
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodBooking", b =>
                {
                    b.HasOne("ThAmCo.Catering.Data.Menu", "Menu")
                        .WithMany("FoodBookingList")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodList", b =>
                {
                    b.HasOne("ThAmCo.Catering.Data.Menu", "Menu")
                        .WithMany("FoodList")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.Menu", b =>
                {
                    b.Navigation("FoodBookingList");

                    b.Navigation("FoodList");
                });
#pragma warning restore 612, 618
        }
    }
}
